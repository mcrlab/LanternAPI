version: '3'

services:
  web:
    image: jameslinnegar/lantern_web
    networks:
      - lantern-network
  api:
    image: jameslinnegar/lantern_api
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      CLOUDMQTT_URL: ${CLOUDMQTT_URL}
      DATABASE_URL: "postgres://user:pass@postgres:5432/db"
    command: "npm run production"
    networks:
      - lantern-network
  revproxy:
    image: jameslinnegar/lantern_proxy
    depends_on: 
      - api
      - web
    ports:
      - "80:80"
    networks:
      - lantern-network
  mqtt:
    image: eclipse-mosquitto
    networks:
      - lantern-network
    ports:
      - 1883:1883
    environment:
      MOSQUITTO_USERNAME: lantern
      MOSQUITTO_PASSWORD: ilovelamp
  postgres:
    image: postgres:10.4
    networks:
      - lantern-network
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  
networks:
  lantern-network:
    driver: bridge # a user defined bridge is required; the default bridge network doesn't support name resolution
